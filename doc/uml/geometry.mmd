classDiagram

    class Angle {
        <<frozen>>
        - value: number
        - unit: string
        + Angle(value: number, unit: string)
        + clone() Angle
        + equals(other: any) boolean
        + transform(...transformers: AngleTransformer) Angle
        + toString() string
    }

    class Matrix {
        <<frozen>>
        - data: number[][]
        - totalRows: number
        - totalColumns: number
        + Matrix(data: number[][])
        + getCell(row: number, column: number) number
        + getColumn(column: number) number[]
        + getRow(row: number) number[]
        + map(mapper: MatrixMapper) T
        + transform(...transformers: MatrixTransformer) Matrix
        + toString() string
    }

    class Point3D {
        <<frozen>>
        - x: number
        - y: number
        - z: number
        + Point3D(x: number, y: number, z: number)
        + clone() Point3D
        + equals(other: any) boolean
        + transform(...transformers: Point3DTransformer) Point3D
        + toString() string
    }

    class AngleMath {
        + convert(unit: string)$ AngleTransformer
        + toDegrees()$ AngleTransformer
        + toRadians()$ AngleTransformer
    }

    class Math3D {
        + rotateAround(axis: string, angle: Angle)$ Point3DTransformer
        + scale(mx: number, my: number, mz: number)$ Point3DTransformer
        + translate(dx: number, dy: number, dz: number)$ Point3DTransformer
        + toColumnMatrix()$ Point3DMapper<Matrix>
        + toColumnVector()$ Point3DMapper<number[][]>
    }

    class MatrixMath {
        + multiply(other: Matrix)$ MatrixTransformer
        + toPoint3D()$ MatrixMapper<Point3D>
    }

    class RotationMatrices {
        + RX(angle: Angle)$ Matrix
        + RY(angle: Angle)$ Matrix
        + RZ(angle: Angle)$ Matrix
        + R(axis: string, angle: Angle)$ Matrix
    }

%% Relationships
    AngleMath ..> Angle
    Math3D ..> Point3D
    Math3D ..> Matrix
    MatrixMath ..> Matrix
    MatrixMath ..> Point3D
    RotationMatrices ..> Angle
    RotationMatrices ..> Matrix